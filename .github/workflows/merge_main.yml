# .github/workflows/merge_main.yml
name: Main Branch Merge Workflow

permissions:
  contents: write

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  check_commit_info:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Get merge commit message
      id: get_commit_message
      run: echo "message=$(git log --pretty=format:%s ${GITHUB_BASE_REF}..${GITHUB_HEAD_REF})" >> $GITHUB_ENV
    
    - name: Check commit message for version bump
      id: check_commit_message
      run: |
        if [[ "${{ env.message }}" =~ ^(fix|feat|perf|chore|docs|style|refactor|test|build): ]]; then
          echo "VERSION_BUMP=true" >> $GITHUB_ENV
        else
          echo "VERSION_BUMP=false" >> $GITHUB_ENV
    
    outputs:
      VERSION_BUMP: ${{ env.VERSION_BUMP }}

  version_bump:
    needs: check_commit_info
    if: needs.check_commit_info.outputs.VERSION_BUMP == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Bump version
      id: bump_version
      run: |
        last_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "0.0.0")
        if [[ "$last_tag" == "0.0.0" ]]; then
          new_tag="1.0.0"
        else
          IFS='.' read -r -a version <<< "$last_tag"
          major="${version[0]}"
          minor="${version[1]}"
          patch="${version[2]}"
          new_tag="${major}.$((minor+1)).0"
        fi
        echo "new_tag=$new_tag" >> $GITHUB_ENV
    
    - name: Create new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git tag ${{ env.new_tag }}
        git push origin ${{ env.new_tag }}

  build_and_push:
    needs: version_bump
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, nginx]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push the images
      uses: docker/build-push-action@v2
      with:
        file: ./${{ matrix.service }}/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/showcase_${{ matrix.service }}:${{ env.new_tag }}
        context: ./${{ matrix.service }}
    
  update_manifest:
    needs: build_and_push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        namespace: [dev, production]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Generate Kubernetes manifest for backend
      run: |
        chmod +x deployment/kubernetes/templates/generate-manifest.sh
        deployment/kubernetes/templates/generate-manifest.sh -n ${{ matrix.namespace }} -a backend -i ${{ secrets.DOCKER_USERNAME }}/showcase_backend -t ${{ env.new_tag }}
    
    - name: Generate Kubernetes manifest for frontend
      run: |
        chmod +x deployment/kubernetes/templates/generate-manifest.sh
        deployment/kubernetes/templates/generate-manifest.sh -n ${{ matrix.namespace }} -a frontend -i ${{ secrets.DOCKER_USERNAME }}/showcase_frontend -t ${{ env.new_tag }}
    
    - name: Generate nginx deployment docker-compose file
      run: |
        chmod +x deployment/kubernetes/templates/generate-docker-compose.sh
        deployment/kubernetes/templates/generate-docker-compose.sh -n ${{ matrix.namespace }} -a nginx -i ${{ secrets.DOCKER_USERNAME }}/showcase_nginx -t ${{ env.new_tag }}
    
    - name: Commit and push manifest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add deployment/kubernetes/${{ matrix.namespace }}/*.yaml
        git add deployment/local_testing/*
        git commit -m "Updating K8s manifest files for ${{ matrix.namespace }} [skip ci]"
        git push